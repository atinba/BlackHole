name: Flutter Build (Nix Flake Version)

on:
  workflow_dispatch:
  push:
    branches:
    - build
    - gh_flake

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # # Gradle cache for faster builds
      # - uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.gradle/caches
      #       ~/.gradle/wrapper
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle-

      - uses: nixbuild/nix-quick-install-action@v29
      
      - uses: nix-community/cache-nix-action@v6
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          # 1 GB = 1073741824 B
          gc-max-store-size-linux: 1073741824
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: nix-${{ runner.os }}-
          # created more than this number of seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
      
      - run: nix develop --command flutter pub get

      # Check for any formatting issues in the code.
      # - run: dart format --set-exit-if-changed .

      # # Statically analyze the Dart code for any errors.
      # - run: flutter analyze .

      # # Run widget tests for our flutter project.
      # - run: flutter test

      # Build apk.
      # - run: nix develop --command flutter build apk --release --split-per-abi

      # # Upload generated apk to the artifacts.
      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: app-arm64-v8a-release.apk
      #     path: build/app/outputs/apk/release/app-arm64-v8a-release.apk

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: app-armeabi-v7a-release.apk
      #     path: build/app/outputs/apk/release/app-armeabi-v7a-release.apk
